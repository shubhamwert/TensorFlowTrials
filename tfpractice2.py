# -*- coding: utf-8 -*-
"""Untitled4.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UkoILxALEJdLYx2d00FnySpTA4GsPv0T
"""

# Commented out IPython magic to ensure Python compatibility.
# %load_ext autoreload
# %autoreload 2

# Commented out IPython magic to ensure Python compatibility.
import tensorflow as tf
# %matplotlib inline
from matplotlib import pyplot as plt

from tensorflow import keras

from

from tensorflow.keras.datasets import mnist
import numpy as np

a=mnist.load_data()

(x_train, y_train), (x_test, y_test)=mnist.load_data()

x_train[1].shape
plt.imshow(x_train[1])

plt.imshow(x_train[np.random.randint(0,100)])

!pip install -q tf-nightly-gpu
tf.enable_eager_execution()

ImageShape=x_train[1].shape

layerMan=keras.Sequential([keras.layers.Flatten(input_shape=(28,28)),
                           keras.layers.Dense(100,activation=tf.nn.relu),
                           keras.layers.Dense(10, activation=tf.nn.softmax)])
layerMan.compile(optimizer='adam', 
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

layerMan.fit(x_train,y_train,epochs=100)

test_j,test_acc=layerMan.evaluate(x_test,y_test)

y_train
import time

for i in range(1,30):
  plt.imshow(x_test[i])
  print(str(layerMan.predict(x_test)[i].argmax()))
  plt.show()
  a=input()
  if a==27:
    break;

